# -*- coding: utf-8 -*-
"""New_Restaurent_Analysis

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/12aqkSyK3i_rvU7YBTNzcjmgAYI9aAZKZ

*** Code to check if the Team database connections are working ***
Create a copy of this file and fill in the username/password.
"""

!pip install mysqlclient

# Commented out IPython magic to ensure Python compatibility.
# %load_ext sql

# Commented out IPython magic to ensure Python compatibility.
# Enter team name (team#) and password below to check connection
# %sql mysql://team11:sqlexperts2be@badm-database.cte4bvaqxbgn.us-east-2.rds.amazonaws.com:3306

# Commented out IPython magic to ensure Python compatibility.
# List databases
# %sql show databases

# Commented out IPython magic to ensure Python compatibility.
# team name is the same as your schema/database name
# %sql use team11

# Commented out IPython magic to ensure Python compatibility.
 # List all tables in out database
# %sql show tables;

"""1. Filtering from restaurant businesses in the yelp data set and group them by star ratings to access the quality of restaurents in the country"""

# Commented out IPython magic to ensure Python compatibility.
# %%sql 
# select count(*) as Total_Restaurants, stars 
# from Business_Details
# where categories like "%Restaurant%"
# group by stars;

"""2.  The chefs available with us are proficient in Indian, Mexican, Italian, Uzbek and Russian and hence computing a column which extracts the cuisine    from "categories" attribute. Additionally counting the number of restaurants for each cuisine to decide on one which will involve minimum competition."""

# Commented out IPython magic to ensure Python compatibility.
# %%sql 
# select case when categories like "%Indian%" then "Indian" else 
#                   case when categories like "%Mexican%" then "Mexican" else
#                       case when categories like "%Italian%" then "Italian" else
#                         case when categories like "%Uzbek%" or categories like "%Russian%" then "Uzbek&Russian" else  "Others" end end end end as Cuisine, 
#                           count(*) as 'No. of Restaurants' from Business_Details
# where categories like "%Restaurant%"
# group by case when categories like "%Indian%" then "Indian" else 
#                   case when categories like "%Mexican%" then "Mexican" else
#                         case when categories like "%Italian%" then "Italian" else
#                           case when categories like "%Uzbek%" or categories like "%Russian%" then "Uzbek&Russian" else  "Others" end end end end
# order by 'No. of Restaurants';

"""3. We decide on Uzbek, Russian or Indian cuisine as these will attract the least competition. 
Next, we filter for restaurants serving these cuisines and locate their city and states.
Analysing this list, we want to target a state with a median number of restaurants and a city within this state which has a low average rating for these type of cuisine restaurents. 
We decide on opening a restaurant in **Exton**, **Pennsylvania** with 12 restaurants from our favorable cusine list and the lowest average rating for the same in the state.
"""

# Commented out IPython magic to ensure Python compatibility.
# %%sql 
# select count(*) as 'No. of Restaurants', round(avg(stars),2) as 'Average Rating', city, state from Business_Details
# where categories like "%Restaurant%" and (categories like "%Uzbek%" or categories like "%Russian%" or categories like "%Indian%")
# group by city, state 
# order by 'No. of Restaurants' desc, 'Average Rating' desc;

"""4. Next, list the top 10 restaurents names in the city and their corresponding ratings as its always good to know your competition.

"""

# Commented out IPython magic to ensure Python compatibility.
# %%sql
# select state, city, stars, name from Business_Details
# where categories like "%Restaurant%" and state = 'PA' and city ='Exton'
# order by stars desc
# limit 10;

"""5. Getting the percentage of restaurants who serve alcohol in the area to see if alcohol service in the restaurent will be a good idea. 
We get around 10% which seems like a fair percentage. 
"""

# Commented out IPython magic to ensure Python compatibility.
# %%sql
# select (select count(*) from Business_Details where categories like "%Restaurant%" and city ='Exton' and 
# (HappyHour = "True" or Alcohol like "%full_bar%" or Alcohol like "%beer_and_wine%"))*100/count(*) as 'Alcohol Serving Percentage'
# from Business_Details
# where city = 'Exton'

"""6. Following this we now to see the location of these alcohol serving restaurants and analyse their categories e.g., Cuisine, type, ambiance etc.
We also have their star ratings ordered in the descending order to look for the best ones.
"""

# Commented out IPython magic to ensure Python compatibility.
# %%sql
# select name, postal_code, categories, stars from Business_Details
# where categories like "%Restaurant%" and city ='Exton' and 
# (HappyHour = "True" or Alcohol like "%full_bar%" or Alcohol like "%beer_and_wine%") 
# order by stars desc;
#

"""7. We are going over the top 10 best reviews from Restaurants which serve Alcohol to understand the peoples liking."""

# Commented out IPython magic to ensure Python compatibility.
# %%sql 
# select business_id, stars, text from Reviews 
# where business_id in (select business_id from Business_Details
# where categories like "%Restaurant%" and city ='Exton' and 
# (HappyHour = "True" or Alcohol like "%full_bar%" or Alcohol like "%beer_and_wine%") )
# order by stars desc
# limit 10;

"""8. Getting the percentage of restaurants who have an outdoor seating in the area to see if outdoor seating in the restaurant will be a good idea. 
We get around 13% which seems like a fair percentage. 
"""

# Commented out IPython magic to ensure Python compatibility.
# %%sql
# select (select COUNT(*) from Business_Details where categories like "%Restaurant%" and 
# city = "Exton" AND OutdoorSeating = "True")*100/count(*) as 'Outdoor Seating Percentage'
# from Business_Details
# where city = 'Exton'
#

"""9. We get the exact location of restaurants with an outdoor seating to do our field research on techniques which these places have used to provide outdoor seating in a cold state like Pennsylvania."""

# Commented out IPython magic to ensure Python compatibility.
# %%sql
# select name, postal_code, latitude, longitude, categories from Business_Details
# where categories like "%Restaurant%" and state = 'PA' and city ='Exton' and OutdoorSeating = "True"

"""10. Finally the Restaurants which are open in the city over the weekend which serves our preferred cuisines analyse our competition during the weekend when customers eat out the most"""

# Commented out IPython magic to ensure Python compatibility.
# %%sql 
# select name, Friday, Saturday, Sunday from Business_Details
# where Sunday != 'None' and Saturday != 'None' and Friday !='None' and city = 'Exton'
# and categories like "%Restaurant%" and (categories like "%Uzbek%" or categories like "%Russian%" or categories like "%Indian%");
#